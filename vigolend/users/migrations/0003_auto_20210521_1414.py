# Generated by Django 3.1.8 on 2021-05-21 12:14

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_auto_20210521_1228'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'Register User', 'verbose_name_plural': 'Registered Users'},
        ),
        migrations.AddField(
            model_name='user',
            name='contact_number',
            field=models.CharField(blank=True, help_text='The contact number of the customer.', max_length=50, null=True, verbose_name='Contact Number'),
        ),
        migrations.AddField(
            model_name='user',
            name='country_of_residence',
            field=models.CharField(blank=True, help_text='The country of residence of the customer. KYC Verification will be applied to this country and customer must provide proof of such residence as relevant in the country of jurisdiction.', max_length=150, null=True, verbose_name='Country of Residence'),
        ),
        migrations.AddField(
            model_name='user',
            name='current_address',
            field=models.CharField(blank=True, help_text='The current living address of the customer.', max_length=255, null=True, verbose_name='Current Address'),
        ),
        migrations.AddField(
            model_name='user',
            name='date_of_birth',
            field=models.DateField(blank=True, help_text='The birth date of the customer.', null=True, verbose_name='Date of Birth'),
        ),
        migrations.AddField(
            model_name='user',
            name='default_currency',
            field=models.CharField(blank=True, default='EUR', help_text='The default currency of the borrower. Currency will be sent against borrowers country of residence.', max_length=3, null=True, verbose_name='Default Currency'),
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, help_text='The first names of the customer.', max_length=255, null=True, verbose_name='First names'),
        ),
        migrations.AddField(
            model_name='user',
            name='job_title',
            field=models.CharField(blank=True, help_text='The job title of the customer.', max_length=150, null=True, verbose_name='Job Title'),
        ),
        migrations.AddField(
            model_name='user',
            name='kyc_complete',
            field=models.BooleanField(default=False, help_text='Flag to determine if customer has completed KYC verification.', verbose_name='KYC Complete'),
        ),
        migrations.AddField(
            model_name='user',
            name='kyc_complete_date',
            field=models.DateTimeField(blank=True, help_text='Timestamp when customer completed KYC verification process.', null=True, verbose_name='KYC Complete Date'),
        ),
        migrations.AddField(
            model_name='user',
            name='kyc_status',
            field=models.CharField(blank=True, choices=[('unverified', 'Unverifed'), ('pending', 'Pending'), ('verified', 'Verified'), ('action_required', 'Action Required'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected/Refused')], default='Unverified', help_text='The KYC Status of the customer.', max_length=15, null=True, verbose_name='KYC Status'),
        ),
        migrations.AddField(
            model_name='user',
            name='kyc_submitted',
            field=models.BooleanField(default=False, help_text='Flag to determine if customer has submitted a KYC Verification.', verbose_name='KYC Submitted'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, help_text='The first names of the customer.', max_length=255, null=True, verbose_name='Last names'),
        ),
        migrations.AddField(
            model_name='user',
            name='on_boarding_complete',
            field=models.BooleanField(default=False, help_text='Flag to determine if customer has completed onboarding process.', verbose_name='Completed Onboarding'),
        ),
        migrations.AddField(
            model_name='user',
            name='on_boarding_complete_date',
            field=models.DateTimeField(blank=True, help_text='Timestamp when customer completed onboarding process.', null=True, verbose_name='Onboarding Complete Date'),
        ),
        migrations.AddField(
            model_name='user',
            name='permanent_address',
            field=models.CharField(blank=True, help_text='The permanent address of the customer.', max_length=255, null=True, verbose_name='Permanent Address'),
        ),
        migrations.AddField(
            model_name='user',
            name='place_of_birth',
            field=models.CharField(blank=True, help_text='The place of birth of the customer. This must match the place of birth as indicated in the customers photo Identitication.', max_length=150, null=True, verbose_name='Place of Birth'),
        ),
        migrations.AddField(
            model_name='user',
            name='registered_ip_address',
            field=models.GenericIPAddressField(blank=True, editable=False, help_text='The IP address recorded at the time of registration.', null=True, verbose_name='Registered IP Address'),
        ),
        migrations.AddField(
            model_name='user',
            name='social_security_number',
            field=models.CharField(blank=True, help_text='The social security number of the customer. This helps to determine the credit score and also validates the identity of the customer.', max_length=50, null=True, verbose_name='Social Security Number'),
        ),
        migrations.AddField(
            model_name='user',
            name='verification_date',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Timestamp when customers profile was verified.', null=True, verbose_name='Verification Date'),
        ),
    ]
